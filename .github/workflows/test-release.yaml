name: "Test topologies on release"

on: [ push ]
#on:
#  release:
#    types: [published]

# Declare default permissions as read only.
permissions: read-all

jobs:
  configure_aws:
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Setup python deps
        run: |
          pip3 install boto3
          pip3 install lxml
          pip3 install ansible-core

      - name: Copy ansible.cfg
        run: cp configure-aws/roles/configure_bootstrap/files/ansible.cfg ~/.ansible.cfg

      - name: Install requirements
        env:
          ANSIBLE_GALAXY_SERVER_AUTOMATION_HUB_TOKEN: ${{ secrets.ANSIBLE_GALAXY_SERVER_AUTOMATION_HUB_TOKEN }}
        run: ansible-galaxy install -r requirements.yml

      - name: Deploy AWS
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          ANSIBLE_GALAXY_SERVER_AUTOMATION_HUB_TOKEN: ${{ secrets.ANSIBLE_GALAXY_SERVER_AUTOMATION_HUB_TOKEN }}
          SSH_KEY_VAULT_PASS: ${{ secrets.SSH_KEY_VAULT_PASS }}
        run: |
          pushd configure-aws
          
          echo $SSH_KEY_VAULT_PASS > vault-password.sec
          
          ansible-playbook deploy.yml --skip-tags blank \
            --vault-password-file=vault-password.sec \
            -e SSH_KEY_VAULT_PASS=${SSH_KEY_VAULT_PASS} \
            -e aws_access_key=${AWS_ACCESS_KEY_ID} \
            -e aws_secret_key=${AWS_SECRET_ACCESS_KEY} \
            -e ANSIBLE_GALAXY_SERVER_AUTOMATION_HUB_TOKEN=${ANSIBLE_GALAXY_SERVER_AUTOMATION_HUB_TOKEN}